{% extends "frontOffice/base.html.twig" %} {% block title %} {% if action ==
"Modifier" %} Modifier {% else %} Ajouter {% endif %} Reclamation {% endblock %}
{% block content %}
<div class="main-content bg-lightblue theme-dark-bg right-chat-active">
  <div class="middle-sidebar-bottom">
    <div class="middle-sidebar-left">
      <div class="middle-wrap">
        <div class="card w-100 border-0 bg-white shadow-xs p-0 mb-4">
          <div class="card-body p-4 w-100 bg-current border-0 d-flex rounded-3">
            <a href="{{ path('app_settings') }}" class="d-inline-block mt-2">
              <i class="ti-arrow-left font-sm text-white"></i>
            </a>
            <h4 class="font-xs text-white fw-600 ms-4 mb-0 mt-2">
              {% if action == "Modifier" %} Modifier {% else %} Ajouter {% endif
              %} Reclamation
            </h4>
          </div>
          <div class="card-body p-lg-5 p-4 w-100 border-0">
            {# Affichage des messages Flash, par exemple en cas de succès #} {%
            for message in app.flashes('success') %}
            <div class="alert alert-success">{{ message }}</div>
            {% endfor %} {# Début du formulaire Symfony #}
            {{ form_start(form, {'attr': {'novalidate': 'novalidate'}}) }}

            <div class="row">
              {# Champ Titre avec bouton micro #}
              <div class="col-lg-12 mb-3">
                <div class="form-group">
                  {{ form_label(form.title) }}
                  <div class="input-group">
                    <button
                      type="button"
                      class="btn btn-outline-secondary speech-btn"
                      data-target="{{ form.title.vars.id }}"
                      title="Utiliser la reconnaissance vocale"
                    >
                      <i class="ti-microphone"></i>
                    </button>
                    {{ form_widget(form.title, {'attr': {'class': 'form-control', 'placeholder': 'Claim title'

                    }}) }}
                  </div>
                  {{ form_errors(form.title) }}
                </div>
              </div>

              {# Champ Type avec bouton micro #}
              <div class="col-lg-12 mb-3">
                <div class="form-group">
                  {{ form_label(form.type) }}
                  <div class="input-group">
                    <button
                      type="button"
                      class="btn btn-outline-secondary speech-btn"
                      data-target="{{ form.type.vars.id }}"
                      title="Utiliser la reconnaissance vocale"
                    >
                      <i class="ti-microphone"></i>
                    </button>
                    {{ form_widget(form.type, {'attr': {'class': 'form-control', 'placeholder': 'Claim type'

                    }}) }}
                  </div>
                  {{ form_errors(form.type) }}
                </div>
              </div>

              {# Champ Contenu avec bouton micro #}
              <div class="col-lg-12 mb-3">
                <div class="form-group">
                  {{ form_label(form.content) }}
                  <div class="input-group">
                    <button
                      type="button"
                      class="btn btn-outline-secondary speech-btn"
                      data-target="{{ form.content.vars.id }}"
                      title="Utiliser la reconnaissance vocale"
                    >
                      <i class="ti-microphone"></i>
                    </button>
                    {{ form_widget(form.content, {'attr': {'class': 'form-control', 'placeholder': 'Describe your claim', 'rows': 3

                    }}) }}
                  </div>
                  {{ form_errors(form.content) }}
                </div>
              </div>

              {# Champ Image (pas de reconnaissance vocale pour les fichiers) #}
              <div class="col-lg-12 mb-3">
                <div class="form-group">
                  {{ form_label(form.image) }}
                  {{ form_widget(form.image, {'attr': {'class': 'form-control'

                  }}) }}
                  {{ form_errors(form.image) }}
                </div>
              </div>
            </div>

            <div class="row">
              <div class="col-lg-12 mb-0">
                <button
                  type="submit"
                  class="bg-current text-center text-white font-xsss fw-600 p-3 w175 rounded-3 d-inline-block"
                  style="margin-top: 10px"
                >
                  Confirmer
                </button>
              </div>
            </div>

            {{ form_end(form) }}
            {# Fin du formulaire Symfony #}
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

{# Script pour activer la reconnaissance vocale via l'API Web Speech #}
<script>
  document.addEventListener("DOMContentLoaded", function () {
    // Vérifie la compatibilité du navigateur avec l'API Web Speech
    const SpeechRecognition =
      window.SpeechRecognition || window.webkitSpeechRecognition;
    if (!SpeechRecognition) {
      console.warn(
        "La reconnaissance vocale n'est pas supportée par ce navigateur."
      );
      return;
    }

    // Pour chaque bouton microphone, on ajoute un écouteur
    document.querySelectorAll(".speech-btn").forEach(function (button) {
      button.addEventListener("click", function () {
        const targetId = this.getAttribute("data-target");
        const targetInput = document.getElementById(targetId);
        if (!targetInput) return;

        // Instanciation de la reconnaissance vocale
        const recognition = new SpeechRecognition();
        recognition.lang = "fr-FR"; // Définir la langue (ici français)
        recognition.interimResults = false;
        recognition.maxAlternatives = 1;

        // Optionnel : indiquer visuellement que la reconnaissance est active
        button.classList.add("listening");

        recognition.start();

        recognition.addEventListener("result", function (event) {
          const transcript = event.results[0][0].transcript;
          // On insère le texte reconnu dans le champ ciblé
          targetInput.value = transcript;
        });

        recognition.addEventListener("error", function (event) {
          console.error("Erreur de reconnaissance vocale :", event.error);
        });

        recognition.addEventListener("end", function () {
          // On réinitialise le bouton une fois la reconnaissance terminée
          button.classList.remove("listening");
        });
      });
    });
  });
</script>
{% endblock %}
