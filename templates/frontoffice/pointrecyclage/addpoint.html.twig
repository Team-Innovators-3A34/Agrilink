{% extends "frontOffice/base.html.twig" %} {% block title %}Ajouter point de
recyclage{% endblock %} {% block content %}
<style>
  #map {
    position: sticky;
    top: 0;
    height: 300px;
  }
</style>

<div class="main-content bg-lightblue theme-dark-bg right-chat-active">
  <div class="middle-sidebar-bottom">
    <div class="middle-sidebar-left">
      <div class="middle-wrap">
        <div class="card w-100 border-0 bg-white shadow-xs p-0 mb-4">
          <div class="card-body p-4 w-100 bg-current border-0 d-flex rounded-3">
            <a href="{{ path('app_settings') }}" class="d-inline-block mt-2"
              ><i class="ti-arrow-left font-sm text-white"></i
            ></a>
            <h4 class="font-xs text-white fw-600 ms-4 mb-0 mt-2">
              Details du point de recyclage
            </h4>
          </div>

          <div class="card-body p-lg-5 p-4 w-100 border-0 mb-0">
            {{ form_start(form, {'attr': {'novalidate': 'novalidate'}}) }}

            <div class="row">
              <div class="col-lg-6 mb-3">
                <div class="form-group">
                  <label class="mont-font fw-600 font-xsss">Nom</label>
                  {{ form_widget(form.name, {'attr': {'class': 'form-control'






                  }}) }}
                </div>
              </div>
            </div>
            <div class="row">
              <div class="col-lg-6 mb-3">
                <div class="form-group">
                  <label>Image</label>
                  {{ form_widget(form.image) }}
                  <div class="text-danger">
                    {{ form_errors(form.image) }}
                  </div>
                  {% if form.image and action=="edit"%}
                  <p>Image actuelle :</p>
                  <img
                    src="{{ asset('uploads/images/' ~ form.vars.value.image) }}"
                    alt="Image du point"
                    width="150"
                  />
                  {% endif %}
                </div>
              </div>
            </div>

            <div class="row">
              <div class="col-lg-10 mb-3">
                <div class="form-group">
                  <label class="mont-font fw-600 font-xsss">Address</label>
                  {{ form_widget(form.adresse, {'attr': {'class': 'form-control'




                  }}) }}
                </div>
              </div>
              <div class="col-lg-10 mb-3">
                <div class="form-group">
                  <label class="mont-font fw-600 font-xsss">Description</label>
                  {{ form_widget(form.description, {'attr': {'class': 'form-control'




                  }}) }}
                </div>
                </div>
                {{ form_widget(form.longitude, { attr: { style: "display:none;" } }) }}
                {{ form_widget(form.latitude, { attr: { style: "display:none;" } }) }}
                <!-- Map -->
              <div class="col-lg-12 mb-3">
                <div id="map"></div>
              </div>
            </div>

            <div class="col-lg-12 mb-0 mt-2 ps-0">
              <button
                type="submit"
                class="bg-current text-center text-white font-xsss fw-600 p-3 w175 rounded-3 d-inline-block"
              >
                Save
              </button>
            </div>

            {{ form_end(form) }}
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- Leaflet.js Integration -->
<link
  rel="stylesheet"
  href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css"
/>
<script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>
<script>
  var map = L.map("map").setView([36.8065, 10.1815], 13); // Default view (Tunis) in case the coordinates are empty

  // Add OpenStreetMap tile layer
  L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png", {
    maxZoom: 19,
    attribution:
      '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors',
  }).addTo(map);

  // Initialize marker variable
  var marker;

  // Update form data when clicking on the map
  map.on("click", function (e) {
    var latlng = e.latlng;

    // If the marker exists, update its position; otherwise, create a new marker
    if (marker) {
      marker.setLatLng(latlng);
    } else {
      marker = L.marker([latlng.lat, latlng.lng]).addTo(map);
    }

    // Update form fields for latitude and longitude
    document.getElementById("pointrecyclage_latitude").value = latlng.lat;
    document.getElementById("pointrecyclage_longitude").value = latlng.lng;

    // Optionally log the updated values
    console.log("Updated latitude: " + latlng.lat);
    console.log("Updated longitude: " + latlng.lng);
  });
</script>
{% endblock %}
