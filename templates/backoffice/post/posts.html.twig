{% extends 'backoffice/base.html.twig' %}
{% block title %}List Post {% endblock %}

{% block stylesheets %}
{{ parent() }}
<link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />
<style>
  /* Enhanced filter styling */
  .filter-card {
    border-radius: 10px;
    box-shadow: 0 4px 12px rgba(0,0,0,0.08);
    margin-bottom: 1.5rem;
    border: none;
  }
  
  .filter-card .card-header {
    background-color: #f8f9fa;
    border-bottom: 1px solid rgba(0,0,0,0.05);
    padding: 0.8rem 1.25rem;
  }
  
  .filter-card .card-title {
    margin-bottom: 0;
    font-weight: 600;
    font-size: 1.1rem;
  }
  
  .filter-controls {
    padding: 1.5rem;
  }
  
  .form-label {
    font-weight: 500;
    margin-bottom: 0.5rem;
    color: #495057;
  }
  
  .filter-input {
    border-radius: 6px;
  }
  
  .filter-btn {
    border-radius: 6px;
    font-weight: 500;
    padding: 0.5rem 1.25rem;
  }
  
  /* Select2 custom styling */
  .select2-container--default .select2-selection--multiple {
    border-color: #ced4da;
    border-radius: 6px;
    min-height: 38px;
  }
  
  .select2-container--default.select2-container--focus .select2-selection--multiple {
    border-color: #80bdff;
    box-shadow: 0 0 0 0.2rem rgba(0,123,255,0.25);
  }
  
  .select2-container--default .select2-selection--multiple .select2-selection__choice {
    background-color: #e9ecef;
    border: 1px solid #ced4da;
    border-radius: 4px;
    padding: 2px 8px;
  }
  
  .helper-text {
    display: block;
    font-size: 0.75rem;
    color: #6c757d;
    margin-top: 0.25rem;
  }
  
  /* Table styling */
  .data-table {
    box-shadow: 0 2px 8px rgba(0,0,0,0.05);
    border-radius: 8px;
    overflow: hidden;
  }
  
  .data-table thead {
    background-color: #f8f9fa;
  }
  
  .data-table th {
    font-weight: 600;
    color: #495057;
    border-top: none;
    padding: 0.75rem 1rem;
  }
  
  .data-table td {
    padding: 0.75rem 1rem;
    vertical-align: middle;
  }
  
  .badge {
    padding: 0.4em 0.7em;
    font-weight: 500;
  }
</style>
{% endblock %}

{% block content %}
<div class="container-fluid">
  <div class="row">
    <div class="col-lg-12">
      <div class="d-flex flex-wrap align-items-center justify-content-between mb-4">
        <div>
          <h4 class="mb-3">Post List</h4>
          <p class="text-muted">Manage and filter all posts from the platform</p>
        </div>
      </div>
    </div>
    
    <!-- Filter Form -->
    <div class="col-lg-12">
      <div class="card filter-card">
        <div class="card-header d-flex justify-content-between align-items-center">
          <div class="header-title">
            <h4 class="card-title"><i class="ri-filter-3-line me-2"></i>Filter Posts</h4>
          </div>
          <div>
            <button class="btn btn-sm btn-outline-primary" type="button" data-bs-toggle="collapse" data-bs-target="#filterCollapse" aria-expanded="false" aria-controls="filterCollapse">
              <i class="ri-equalizer-line me-1"></i> Toggle Filters
            </button>
          </div>
        </div>
        <div class="collapse show" id="filterCollapse">
          <div class="card-body filter-controls">
            <form id="filter-form" method="GET" action="{{ path('app_postsback') }}">
              <div class="row g-3">
                <div class="col-md-3">
                  <label for="dateFrom" class="form-label">Date From</label>
                  <input type="date" class="form-control filter-input" id="dateFrom" name="dateFrom" value="{{ app.request.query.get('dateFrom') }}">
                </div>
                <div class="col-md-3">
                  <label for="dateTo" class="form-label">Date To</label>
                  <input type="date" class="form-control filter-input" id="dateTo" name="dateTo" value="{{ app.request.query.get('dateTo') }}">
                </div>
                <div class="col-md-3">
                  <label for="emotions" class="form-label">Sentiment</label>
                  <select class="form-select filter-input select2-multiple" id="emotions" name="emotions[]" multiple>
                    {% for emotion in emotions %}
                      <option value="{{ emotion }}" 
                        {% if app.request.query.all('emotions') is defined and emotion in app.request.query.all('emotions') %}selected{% endif %}>
                        {{ emotion|capitalize }}
                      </option>
                    {% endfor %}
                  </select>
                  <span class="helper-text">Select one or more sentiment values</span>
                </div>
                <div class="col-md-3">
                  <label for="title" class="form-label">Title Search</label>
                  <input type="text" class="form-control filter-input" id="title" name="title" placeholder="Search by title" value="{{ app.request.query.get('title') }}">
                </div>
              </div>
              
              <div class="row g-3 mt-1">
                <div class="col-md-6">
                  <label for="types" class="form-label">Post Type</label>
                  <select class="form-select filter-input select2-multiple" id="types" name="types[]" multiple>
                    {% for type in postTypes %}
                      <option value="{{ type }}" 
                        {% if app.request.query.all('types') is defined and type in app.request.query.all('types') %}selected{% endif %}>
                        {{ type|capitalize }}
                      </option>
                    {% endfor %}
                  </select>
                  <span class="helper-text">Select one or more post types</span>
                </div>
                <div class="col-md-6">
                  <label for="users" class="form-label">Posted By</label>
                  <select class="form-select filter-input select2-multiple" id="users" name="users[]" multiple>
                    {% for user in users %}
                      <option value="{{ user.id }}" 
                        {% if app.request.query.all('users') is defined and (user.id ~ '') in app.request.query.all('users') %}selected{% endif %}>
                        {% if user.nom is defined and user.prenom is defined %}
                          {{ user.nom }} {{ user.prenom }}
                        {% else %}
                          {{ user.username|default('User #' ~ user.id) }}
                        {% endif %}
                      </option>
                    {% endfor %}
                  </select>
                  <span class="helper-text">Select one or more users</span>
                </div>
              </div>
              
              <div class="d-flex justify-content-end mt-4">
                <a href="{{ path('app_postsback') }}" class="btn btn-outline-secondary me-2 filter-btn reset-btn">
                  <i class="ri-refresh-line me-1"></i> Reset
                </a>
                <button type="submit" class="btn btn-primary filter-btn">
                  <i class="ri-filter-line me-1"></i> Apply Filters
                </button>
              </div>
            </form>
          </div>
        </div>
      </div>
    </div>
    
    <div class="col-lg-12">
      <div id="posts-container">
        {% include 'backoffice/post/_posts_table.html.twig' with {'posts': posts} %}
      </div>
    </div>
  </div>
  <!-- Page end  -->
</div>

<!-- Bootstrap JS -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>

<!-- jQuery (required for AJAX) -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<!-- Select2 for enhanced dropdowns -->
<script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>

<script>
$(document).ready(function() {
  // Initialize Select2 for multiple selects with custom styling
  $('.select2-multiple').select2({
    width: '100%',
    placeholder: "Select options",
    allowClear: true,
    closeOnSelect: false
  });

  // AJAX form submission
  function reloadPosts() {
    $.ajax({
      url: "{{ path('app_postsback') }}",
      type: "GET",
      data: $('#filter-form').serialize(),
      headers: {
        'X-Requested-With': 'XMLHttpRequest'
      },
      beforeSend: function() {
        $('#posts-container').html('<div class="text-center py-5"><div class="spinner-border text-primary" role="status"><span class="visually-hidden">Loading...</span></div><p class="mt-2">Loading posts...</p></div>');
      },
      success: function(response) {
        $('#posts-container').html(response.html);
      },
      error: function(xhr) {
        console.error('Error loading posts:', xhr.responseText);
        $('#posts-container').html('<div class="alert alert-danger">Error loading posts. Please try again.</div>');
      }
    });
  }

  // Apply filters on change instead of form submit
  $('.filter-input').on('change', function() {
    reloadPosts();
  });

  // Reset button
  $('.reset-btn').on('click', function(e) {
    e.preventDefault();
    
    // Reset form fields
    $('#filter-form')[0].reset();
    
    // For Select2 dropdowns, trigger the change event
    $('.select2-multiple').val(null).trigger('change');
    
    // Reload posts with no filters
    reloadPosts();
  });
});
</script>
{% endblock %}