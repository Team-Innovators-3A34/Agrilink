{% extends 'base.html.twig' %}

{% block content %}
<div class="container d-flex justify-content-center align-items-center" style="min-height: 100vh;">
    <div class="card p-4 shadow-lg" style="width: 50rem;">
        <!-- Image d'illustration -->
        <div class="text-center mb-4">
            <img src="{{ asset('images/form2.jpg') }}" alt="Illustration" class="img-fluid" style="width: 800px; height: 600px;">
        </div>
        
        <h2 class="text-center mb-4">Ajouter une ressource</h2>
        {{ form_start(form, {'attr': {'novalidate': 'novalidate', 'onsubmit': 'return verifierTexteAvecIA()'}}) }}

        <div class="mb-3">
            {{ form_widget(form, {'attr': {'class': 'form-control', 'id': 'description'}}) }}
        </div>
        
      

        

        <div class="row">
            <div class="col-lg-12">
                <button type="submit" class="btn w-100 p-3 mt-3 font-xsss text-center text-white bg-current rounded-3 text-uppercase fw-600 ls-3">
                    Enregistrer la ressource
                </button>
            </div>
        </div>
       
        <div class="row">
            <div class="col-lg-12">
                <a href="{{ path('app_resourcelist') }}" class="btn w-100 p-3 mt-3 font-xsss text-center text-white bg-current rounded-3 text-uppercase fw-600 ls-3">
                    Liste des ressources
                </a>
            </div>
        </div>

        {{ form_end(form) }}
    </div>
</div>

<script>
async function verifierTexteAvecIA(event) {
    event.preventDefault(); // Empêcher l'envoi du formulaire immédiatement

    let description = document.getElementById("description").value;

    // Vérifier si le texte est répétitif ou aléatoire (ex: "jjjjj" ou "dsfskdfj")
    if (/^(.)\1{4,}$/.test(description) || description.length < 10) {
        alert("Veuillez entrer une description significative.");
        return false;
    }

    // Appel API Hugging Face (modèle NLP adapté à l'analyse grammaticale)
    const response = await fetch("https://api-inference.huggingface.co/models/textattack/roberta-base-CoLA", {
        method: "POST",
        headers: {
            "Authorization": "Bearer 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", // Remplace avec ton vrai token
            "Content-Type": "application/json"
        },
        body: JSON.stringify({ inputs: description })
    });

    const result = await response.json();
    console.log(result); // Voir la réponse exacte pour ajustements

    // Vérifier la prédiction
    if (result.length > 0 && result[0].label === "unacceptable") {
        <!-- Message d'erreur -->
        <div id="error-message" style="display: none; color: red; text-align: center; margin-bottom: 15px;">
            Le texte que vous avez entré ne semble pas pertinent. Veuillez reformuler.
        </div>;
        return false;
    }

    // Si tout est OK, soumettre le formulaire
    document.querySelector("form").submit();
}



</script>
 



{% endblock %}
